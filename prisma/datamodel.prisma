type User {
    id: ID! @id
    firstName: String!
    lastName: String!
    userName: String!
    password: String!
    email: String!
    phoneNumber: String
    balance: Float!
    userVerified: Boolean!
    ledgerEntries: [Ledger]
}

type Ledger {
    id: ID! @id
    amountWagered: Float!
    collected: Float
    payout: Float
    entryTime: DateTime! @createdAt
    user: User!
    wagerType: WagerType!
    outcome: Outcome!
}

type Game {
    id: ID! @id
    homeTeam: Team! @relation(name: "HomeGame")
    awayTeam: Team! @relation(name: "AwayGame")
    gameTime: DateTime!
    sport: Sport!
    odds:[Odd]!
}

type Odd {
    id: ID! @id
    game: Game!
    moneyLine: Int
    runLineOdds: Int
    runLineRuns: Float
    overUnderOdds: Int
    overUnderRuns: Float
    timeOfOdds: DateTime! @createdAt
}

type Wager {
    id: ID! @id
    ledger: Ledger! 
    odds: Odd!
    oddsType: OddsType!
    pickedOverUnder: OverUnder
    pickedTeam: Team
}

type Outcome {
    id: ID! @id
    outcome: String!
    ledgers: [Ledger]
}

type OddsType{
    id: ID! @id
    oddsType: String!
}

type Sport{
    id: ID! @id
    sportName: String!
    game: [Game]!
}

type WagerType {
    id: ID! @id
    wagerType: String!
    ledgers: [Ledger]!
}

type Team {
    id: ID! @id
    teamName: String!
    city: String!
    homeGames: [Game]! @relation(name: "HomeGame")
    awayGames: [Game]! @relation(name: "AwayGame")
}

type OverUnder{
    id: ID! @id
    value: Boolean! 
    overUnder: String!
}
